{"version":3,"sources":["components/NoWalletDetected.js","components/NetworkErrorMessage.js","components/ConnectWallet.js","helpers/GetInput.js","helpers/witness_calculator.js","helpers/ProofHelper.js","helpers/ProofHelper2.js","components/Dapp.js","redux/modules/user.js","redux/modules/nft.js","redux/configureStore.js","elements/Colors.js","elements/Button.js","elements/Input.js","elements/Copybox.js","elements/Loading.js","elements/RadioButton.js","elements/Text.js","elements/Link.js","elements/Textarea.js","elements/Spacing.js","comps/Header.js","comps/Card.js","comps/ButtonWrap.js","pages/AfterConnect.js","pages/CheckingReward.js","imgs/CheckIcon.js","imgs/FailedIcon.js","pages/Finish.js","pages/Home.js","pages/PrivateNote.js","pages/SecretClaim.js","pages/WaitngClaim.js","pages/WaitingCreatingProof.js","pages/FinishFail.js","shared/App.js","index.js"],"names":["NoWalletDetected","className","href","target","rel","NetworkErrorMessage","message","dismiss","role","type","onClick","ConnectWallet","connectWallet","networkError","MESSAGE","bigint_to_array","n","k","x","mod","idx","ret","x_temp","push","split","pubkey_bigint","getInput","signer","a","getAddress","sAddr","console","log","msgHash","ethers","utils","hashMessage","msgHashBytes","arrayify","signMessage","flatSig","sig","splitSignature","r","s","pubKey","recoverPublicKey","addr","computeAddress","BigInt","y","chunkedX","chunkedY","msghash","chunkedPubkey","merklePathElements","merklePathIndices","merkleRoot","builder","code","options","getMessage","printSharedRWMemory","shared_rw_memory_size","instance","exports","getFieldNumLen32","arr","Uint32Array","j","readSharedRWMemory","fromArray32","c","getMessageChar","String","fromCharCode","WebAssembly","compile","wasmModule","instantiate","runtime","exceptionHandler","errStr","Error","showSharedRWMemory","wc","WitnessCalculator","sanityCheck","this","version","getVersion","n32","getRawPrime","Array","i","prime","witnessSize","getWitnessSize","input","init","keys","Object","forEach","h","fnvHash","hMSB","parseInt","slice","hLSB","fArr","flatArray","length","arrFr","toArray32","writeSharedRWMemory","setInputSignal","err","w","_doCalculateWitness","getWitness","buff32","buff","Uint8Array","buffer","pos","charCodeAt","n8","idSection1lengthHex","toString","idSection2length","idSection2lengthHex","size","res","rem","radix","unshift","Number","fillArray","isArray","str","uint64_max","hash","shash","repeat","concat","zkeyPath","wasmPath","calculateProof","fetch","resp","arrayBuffer","wasmBuff","calculateWTNSBin","wtnsBuff","groth16","prove","proof","buildContractCallArgs","nullifier","pi_a","pi_b","reverse","pi_c","Title","styled","h2","React","Component","ethereum","window","LOG_IN","GET_USER","SELECT_USER","NETWORK_ERROR","IS_LOADING","PROVIDER","MINTER","selectedAddress","createAction","user","isLoading","provider","minter","initialState","tokenData","undefined","balance","txBeingSent","transactionError","forceRefresh","_intializeEthers","_provider","providers","Web3Provider","_minter","Contract","contractAddress","AttestationMinter","AttestationMinterArtifact","abi","getSigner","handleActions","state","action","produce","draft","localStorage","setItem","payload","is_login","actionCreators","loginDB","dispatch","getState","history","networkVersion","alert","send","data","result","loginCheckDB","request","method","network","accounts","GET_PROOF","TX_HASH","getProof","txHash","contractArgs","storedProofs","getItem","currentProofs","JSON","parse","stringify","account","mint","then","response","catch","error","createBrowserHistory","rootReducer","combineReducers","nft","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Colors","Button","props","children","small","styles","margin","flexGrow","ButtonSmall","ButtonLarge","defaultProps","button","Input","onChange","value","placeholder","id","label","alertMessage","_ref","InputLabel","InputContainerAlert","ref","InputAlert","InputContainer","p","Loading","useEffect","LoadingStyle","width","height","viewBox","fill","xmlns","d","stroke","move","keyframes","div","RadioButton","name","caption","checked","disabled","RadioButtonWrap","RadioButtonContainer","RidioButtonLabel","htmlFor","RidioButtonCaption","Text","bold","opacity","TextContainer","Link","LinkContainer","Textarea","TextareaLabel","TextareaContainerAlert","TextareaAlert","TextareaContainer","textarea","Spacing","SpacingContainer","Header","connected","address","useSelector","HeaderContainer","Flex","Card","title","contents","btnRight","btnLeft","oneButton","onClickLeft","onClickRight","CardContainer","ButtonWrap","FlexContiner","ButtonContainerRight","ButtonContainerLeft","ButtonContainer","AfterConnect","useDispatch","WaitingCreatingProof","nftActions","CheckingReward","CheckIcon","FailedIcon","Finish","open","oneBtn","Home","useState","Balance","userActions","PrivateNote","proofs","goBack","SecretClaim","web3","Web3","givenProvider","privateNoteInputValue","useRef","addressInputValue","checkInput","current","toChecksumAddress","checkAddress","WaitngClaim","WaitngCreatingProof","FinishFail","App","isLoggedIn","on","newAddress","Fragment","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6dd6f10.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function NoWalletDetected() {\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-6 p-4 text-center\">\n          <p>\n            No Ethereum wallet was detected. <br />\n            Please install{\" \"}\n            <a\n              href=\"http://metamask.io\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              MetaMask\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function NetworkErrorMessage({ message, dismiss }) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      {message}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={dismiss}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { NetworkErrorMessage } from \"./NetworkErrorMessage\";\n\nexport function ConnectWallet({ connectWallet, networkError, dismiss }) {\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-12 text-center\">\n          {/* Metamask network should be set to Localhost:8545. */}\n          {networkError && (\n            <NetworkErrorMessage \n              message={networkError} \n              dismiss={dismiss} \n            />\n          )}\n        </div>\n        <div className=\"col-6 p-4 text-center\">\n          <p>Please connect to your wallet.</p>\n          <button\n            className=\"btn btn-warning\"\n            type=\"button\"\n            onClick={connectWallet}\n          >\n            Connect Wallet\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*eslint-disable*/\nimport { ethers } from \"ethers\";\n// import { buildPoseidon } from 'circomlibjs';\n\nconst MESSAGE = \"ZK Identity: Dark Forest Winners\";\n\nfunction bigint_to_array(n, k, x) {\n    let mod = 1n\n    for (var idx = 0; idx < n; idx++) {\n      mod = mod * 2n\n    }\n  \n    let ret = []\n    var x_temp = x\n    for (var idx = 0; idx < k; idx++) {\n      ret.push(x_temp % mod)\n      x_temp = x_temp / mod\n    }\n    return ret\n}\n\nfunction split(pubkey_bigint) {\n    const x_bigint = pubkey_bigint / 2n ** 256n\n    const y_bigint = pubkey_bigint % 2n ** 256n\n    return [x_bigint, y_bigint]\n}\n\nexport async function getInput(signer) {\n    // const poseidon = await buildPoseidon();\n\n    const sAddr = await signer.getAddress();\n    console.log(sAddr);\n\n    const msgHash = ethers.utils.hashMessage(MESSAGE);\n    const msgHashBytes = ethers.utils.arrayify(msgHash);\n\n    const flatSig = await signer.signMessage(MESSAGE);\n    const sig = ethers.utils.splitSignature(flatSig);\n    console.log(\"sig.r: \" + sig.r)\n    console.log(\"sig.s: \" + sig.s)\n\n    const pubKey = ethers.utils.recoverPublicKey(msgHashBytes, flatSig);\n    console.log(\"pubKey: \" + pubKey)\n\n    // just to double check, this addr should match the sAddr above\n    const addr = ethers.utils.computeAddress(ethers.utils.arrayify(pubKey));\n    console.log(addr);\n\n    const [x, y] = split(BigInt(pubKey))\n    const chunkedX = bigint_to_array(86, 3, x)\n    const chunkedY = bigint_to_array(86, 3, y)\n\n    // TODO: nullifier\n    // TODO: get merkleRoot, merklePathElements, and merklePathIndices\n\n    return {\n        r: bigint_to_array(86, 3, BigInt(sig.r)),\n        s: bigint_to_array(86, 3, BigInt(sig.s)),\n        msghash: bigint_to_array(86, 3, BigInt(msgHash)),\n        chunkedPubkey: [\n            chunkedX,\n            chunkedY\n        ],\n        // nullifier: poseidon(r[0]),\n        merklePathElements: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\n        merklePathIndices: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n        merkleRoot: 1234\n    }\n}\n/*eslint-disable*/\n","/* global BigInt */\n\nexport default async function builder(code, options) {\n  options = options || {};\n\n  const wasmModule = await WebAssembly.compile(code);\n\n  let wc;\n\n  const instance = await WebAssembly.instantiate(wasmModule, {\n    runtime: {\n      exceptionHandler: function (code) {\n        let errStr;\n        if (code == 1) {\n          errStr = \"Signal not found. \";\n        } else if (code == 2) {\n          errStr = \"Too many signals set. \";\n        } else if (code == 3) {\n          errStr = \"Signal already set. \";\n        } else if (code == 4) {\n          errStr = \"Assert Failed. \";\n        } else if (code == 5) {\n          errStr = \"Not enough memory. \";\n        } else {\n          errStr = \"Unknown error\\n\";\n        }\n        // get error message from wasm\n        errStr += getMessage();\n        throw new Error(errStr);\n      },\n      showSharedRWMemory: function () {\n        printSharedRWMemory();\n      },\n    },\n  });\n\n  const sanityCheck = options;\n  //        options &&\n  //        (\n  //            options.sanityCheck ||\n  //            options.logGetSignal ||\n  //            options.logSetSignal ||\n  //            options.logStartComponent ||\n  //            options.logFinishComponent\n  //        );\n\n  wc = new WitnessCalculator(instance, sanityCheck);\n  return wc;\n\n  function getMessage() {\n    var message = \"\";\n    var c = instance.exports.getMessageChar();\n    while (c != 0) {\n      message += String.fromCharCode(c);\n      c = instance.exports.getMessageChar();\n    }\n    return message;\n  }\n\n  function printSharedRWMemory() {\n    const shared_rw_memory_size = instance.exports.getFieldNumLen32();\n    const arr = new Uint32Array(shared_rw_memory_size);\n    for (let j = 0; j < shared_rw_memory_size; j++) {\n      arr[shared_rw_memory_size - 1 - j] =\n        instance.exports.readSharedRWMemory(j);\n    }\n    console.log(fromArray32(arr));\n  }\n}\n\nclass WitnessCalculator {\n  constructor(instance, sanityCheck) {\n    this.instance = instance;\n\n    this.version = this.instance.exports.getVersion();\n    this.n32 = this.instance.exports.getFieldNumLen32();\n\n    this.instance.exports.getRawPrime();\n    const arr = new Array(this.n32);\n    for (let i = 0; i < this.n32; i++) {\n      arr[this.n32 - 1 - i] = this.instance.exports.readSharedRWMemory(i);\n    }\n    this.prime = fromArray32(arr);\n\n    this.witnessSize = this.instance.exports.getWitnessSize();\n\n    this.sanityCheck = sanityCheck;\n  }\n\n  circom_version() {\n    return this.instance.exports.getVersion();\n  }\n\n  async _doCalculateWitness(input, sanityCheck) {\n    //input is assumed to be a map from signals to arrays of bigints\n    this.instance.exports.init(this.sanityCheck || sanityCheck ? 1 : 0);\n    const keys = Object.keys(input);\n    var input_counter = 0;\n    keys.forEach((k) => {\n      const h = fnvHash(k);\n      const hMSB = parseInt(h.slice(0, 8), 16);\n      const hLSB = parseInt(h.slice(8, 16), 16);\n      const fArr = flatArray(input[k]);\n      for (let i = 0; i < fArr.length; i++) {\n        const arrFr = toArray32(fArr[i], this.n32);\n        for (let j = 0; j < this.n32; j++) {\n          this.instance.exports.writeSharedRWMemory(j, arrFr[this.n32 - 1 - j]);\n        }\n        try {\n          this.instance.exports.setInputSignal(hMSB, hLSB, i);\n          input_counter++;\n        } catch (err) {\n          console.log(`After adding signal ${i} of ${k}`);\n          //         throw new Error(err);\n        }\n      }\n    });\n    // if (input_counter < this.instance.exports.getInputSize()) {\n    //     throw new Error(`Not all inputs have been set. Only ${input_counter} out of ${this.instance.exports.getInputSize()}`);\n    // }\n  }\n\n  async calculateWitness(input, sanityCheck) {\n    const w = [];\n\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const arr = new Uint32Array(this.n32);\n      for (let j = 0; j < this.n32; j++) {\n        arr[this.n32 - 1 - j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      w.push(fromArray32(arr));\n    }\n\n    return w;\n  }\n\n  async calculateBinWitness(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const pos = i * this.n32;\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n    }\n\n    return buff;\n  }\n\n  async calculateWTNSBin(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32 + this.n32 + 11);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    //\"wtns\"\n    buff[0] = \"w\".charCodeAt(0);\n    buff[1] = \"t\".charCodeAt(0);\n    buff[2] = \"n\".charCodeAt(0);\n    buff[3] = \"s\".charCodeAt(0);\n\n    //version 2\n    buff32[1] = 2;\n\n    //number of sections: 2\n    buff32[2] = 2;\n\n    //id section 1\n    buff32[3] = 1;\n\n    const n8 = this.n32 * 4;\n    //id section 1 length in 64bytes\n    const idSection1length = 8 + n8;\n    const idSection1lengthHex = idSection1length.toString(16);\n    buff32[4] = parseInt(idSection1lengthHex.slice(0, 8), 16);\n    buff32[5] = parseInt(idSection1lengthHex.slice(8, 16), 16);\n\n    //this.n32\n    buff32[6] = n8;\n\n    //prime number\n    this.instance.exports.getRawPrime();\n\n    var pos = 7;\n    for (let j = 0; j < this.n32; j++) {\n      buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n    }\n    pos += this.n32;\n\n    // witness size\n    buff32[pos] = this.witnessSize;\n    pos++;\n\n    //id section 2\n    buff32[pos] = 2;\n    pos++;\n\n    // section 2 length\n    const idSection2length = n8 * this.witnessSize;\n    const idSection2lengthHex = idSection2length.toString(16);\n    buff32[pos] = parseInt(idSection2lengthHex.slice(0, 8), 16);\n    buff32[pos + 1] = parseInt(idSection2lengthHex.slice(8, 16), 16);\n\n    pos += 2;\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      pos += this.n32;\n    }\n\n    return buff;\n  }\n}\n\nfunction toArray32(s, size) {\n  const res = []; //new Uint32Array(size); //has no unshift\n  let rem = BigInt(s);\n  const radix = BigInt(0x100000000);\n  while (rem) {\n    res.unshift(Number(rem % radix));\n    rem = rem / radix;\n  }\n  if (size) {\n    var i = size - res.length;\n    while (i > 0) {\n      res.unshift(0);\n      i--;\n    }\n  }\n  return res;\n}\n\nfunction fromArray32(arr) {\n  //returns a BigInt\n  var res = BigInt(0);\n  const radix = BigInt(0x100000000);\n  for (let i = 0; i < arr.length; i++) {\n    res = res * radix + BigInt(arr[i]);\n  }\n  return res;\n}\n\nfunction flatArray(a) {\n  var res = [];\n  fillArray(res, a);\n  return res;\n\n  function fillArray(res, a) {\n    if (Array.isArray(a)) {\n      for (let i = 0; i < a.length; i++) {\n        fillArray(res, a[i]);\n      }\n    } else {\n      res.push(a);\n    }\n  }\n}\n\nfunction fnvHash(str) {\n  const uint64_max = BigInt(2) ** BigInt(64);\n  let hash = BigInt(\"0xCBF29CE484222325\");\n  for (var i = 0; i < str.length; i++) {\n    hash ^= BigInt(str[i].charCodeAt());\n    hash *= BigInt(0x100000001b3);\n    hash %= uint64_max;\n  }\n  let shash = hash.toString(16);\n  let n = 16 - shash.length;\n  shash = \"0\".repeat(n).concat(shash);\n  return shash;\n}\n","import builder from \"./witness_calculator\";\nimport { groth16 } from \"snarkjs\";\nimport path from \"path\";\nimport { modules } from \"web3\";\n\nconst zkeyPath = \"./VerifyDfWinner_86-3-8_prod.0.zkey\";\nconst wasmPath = \"./VerifyDfWinner_86-3-8_prod.wasm\";\n\nexport default async function calculateProof(input) {\n  // fullProve like below does not work\n  // other people also raised the issue in snarkjs repo\n  // const { proof } = await groth16.fullProve(zkeyPath, wasmPath, null)\n  console.log(\"wasmPath: \", wasmPath);\n  let resp = await fetch(wasmPath);\n  console.log(\"resp: \", resp);\n  const wasmBuff = await resp.arrayBuffer();\n  const wc = await builder(wasmBuff);\n  const wtnsBuff = await wc.calculateWTNSBin(input, 0);\n  console.log(\"wtnsBuff: \", wtnsBuff);\n  const { proof } = await groth16.prove(zkeyPath, wtnsBuff, null);\n  console.log(\"proof: \", proof);\n  return proof;\n}\n","import { groth16 } from \"snarkjs\";\nimport path from \"path\";\n\nconst zkeyPath = \"./VerifyDfWinner_86-3-8_prod.0.zkey\";\nconst wasmPath = \"./VerifyDfWinner_86-3-8_prod.wasm\";\n\nexport default function buildContractCallArgs(proof, merkleRoot, nullifier) {\n  // the object returned by calculateProof needs to be massaged into a set of parameters the verifying contract\n  // will accept\n  return [\n    proof.pi_a.slice(0, 2), // pi_a\n    // calculateProof reverses values in the inner arrays of pi_b\n    [proof.pi_b[0].slice(0).reverse(), proof.pi_b[1].slice(0).reverse()], // pi_b\n    proof.pi_c.slice(0, 2), // pi_c\n    merkleRoot,\n    nullifier,\n  ];\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// We'll use ethers to interact with the Ethereum network and our contract\nimport { ethers } from \"ethers\";\n\n// We import the contract's artifacts and address here, as we are going to be\n// using them with ethers\nimport AttestationMinterArtifact from \"../contracts/AttestationMinter.json\";\nimport contractAddress from \"../contracts/contract-address.json\";\n\n// All the logic of this dapp is contained in the Dapp component.\n// These other components are just presentational ones: they don't have any\n// logic. They just render HTML.\nimport { NoWalletDetected } from \"./NoWalletDetected\";\nimport { ConnectWallet } from \"./ConnectWallet\";\nimport { Loading } from \"./Loading\";\nimport { Transfer } from \"./Transfer\";\nimport { TransactionErrorMessage } from \"./TransactionErrorMessage\";\nimport { WaitingForTransactionMessage } from \"./WaitingForTransactionMessage\";\nimport { NoTokensMessage } from \"./NoTokensMessage\";\n\nimport { getInput } from \"../helpers/GetInput\";\nimport calculateProof from \"../helpers/ProofHelper\";\nimport buildContractCallArgs from \"../helpers/ProofHelper2\";\n\n// This is the Hardhat Network id, you might change it in the hardhat.config.js\n// Here's a list of network ids https://docs.metamask.io/guide/ethereum-provider.html#properties\n// to use when deploying to other networks.\nconst HARDHAT_NETWORK_ID = \"31337\";\nconst GOERLI_NETWORK_ID = \"5\";\n\n// This is an error code that indicates that the user canceled a transaction\nconst ERROR_CODE_TX_REJECTED_BY_USER = 4001;\n\nconst Title = styled.h2``;\n\nexport class Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // We store multiple things in Dapp's state.\n    // You don't need to follow this pattern, but it's an useful example.\n    this.initialState = {\n      // The info of the token (i.e. It's Name and symbol)\n      tokenData: undefined,\n      // The user's address and balance\n      selectedAddress: undefined,\n      balance: undefined,\n      // The ID about transactions being sent, and any possible error with them\n      txBeingSent: undefined,\n      transactionError: undefined,\n      networkError: undefined,\n      forceRefresh: 0,\n    };\n\n    this.state = this.initialState;\n  }\n\n  render() {\n    // Ethereum wallets inject the window.ethereum object. If it hasn't been\n    // injected, we instruct the user to install MetaMask.\n    if (window.ethereum === undefined) {\n      return <NoWalletDetected />;\n    }\n\n    // The next thing we need to do, is to ask the user to connect their wallet.\n    // When the wallet gets connected, we are going to save the users's address\n    // in the component's state. So, if it hasn't been saved yet, we have\n    // to show the ConnectWallet component.\n    //\n    // Note that we pass it a callback that is going to be called when the user\n    // clicks a button. This callback just calls the _connectWallet method.\n    if (!this.state.selectedAddress) {\n      return (\n        <ConnectWallet\n          connectWallet={() => this._connectWallet()}\n          networkError={this.state.networkError}\n          dismiss={() => this._dismissNetworkError()}\n        />\n      );\n    }\n\n    // If the token data or the user's balance hasn't loaded yet, we show\n    // a loading component.\n    // if (!this.state.tokenData || !this.state.balance) {\n    //   return <Loading />\n    // }\n\n    const proofs = JSON.parse(window.localStorage.getItem(\"proofs\"));\n    const usedProofs = JSON.parse(window.localStorage.getItem(\"usedProofs\"));\n    console.log(usedProofs);\n    // const usedProofs = JSON.parse(jsonUsedProofs)\n\n    // If everything is loaded, we render the application.\n    return (\n      <div className=\"container p-4\">\n        Hello: {this.state.selectedAddress}\n        <button\n          onClick={() =>\n            this._handleProve(() =>\n              this.setState({ forceRefresh: this.forceRefresh + 1 })\n            )\n          }\n        >\n          Create Proof\n        </button>\n        <Title>Proofs:</Title>\n        {proofs?.map((proof, index) => (\n          <div>\n            Proof {proof.address} {index} -{\" \"}\n            <button\n              onClick={() =>\n                this._handleVerify(index, this.selectedAddress, proof, () =>\n                  this.setState({ forceRefresh: this.forceRefresh + 1 })\n                )\n              }\n            >\n              Mint NFT\n            </button>\n          </div>\n        ))}\n        <Title>Used proofs:</Title>\n        {usedProofs?.map((proof, index) => (\n          <div>Proof - {proof.address}</div>\n        ))}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // We poll the user's balance, so we have to stop doing that when Dapp\n    // gets unmounted\n    this._stopPollingData();\n  }\n\n  async _handleProve(forceRefresh) {\n    // ethers signMessage\n    // get publicKey and generate chunked pub key\n    // generate nullifier from signed message\n    console.log(\"Calculate Proof\");\n\n    const input = await getInput(this._provider.getSigner(0));\n    console.log(input);\n\n    const proof = await calculateProof(input);\n    console.log(proof);\n\n    const merkleRoot = 1234;\n    const nullifier = 10;\n    const contractArgs = buildContractCallArgs(proof, merkleRoot, nullifier);\n    console.log(contractArgs);\n\n    // save proof to localStorage\n    const storedProofs = window.localStorage.getItem(\"proofs\");\n    const currentProofs = storedProofs ? JSON.parse(storedProofs) : [];\n    window.localStorage.setItem(\n      \"proofs\",\n      JSON.stringify([...currentProofs, contractArgs])\n    );\n    forceRefresh();\n  }\n\n  async _handleVerify(index, account, proof, forceRefresh) {\n    // take proof and call smart contract\n    const proofs = JSON.parse(window.localStorage.getItem(\"proofs\"));\n\n    window.localStorage.setItem(\n      \"proofs\",\n      JSON.stringify(proofs.filter((item) => item.address === account))\n    );\n\n    // NOTE: this assumes that proof is the proper output from `buildContractCallArgs\n    const tx = await this._minter.mint(\n      proof[0],\n      proof[1],\n      proof[2],\n      proof[3],\n      proof[4]\n    );\n    const receipt = await tx.wait();\n    // TODO: txBeingSent and all that jazz. like in the unused transfer message\n\n    if (receipt.status !== 0) {\n      const storedProofs = window.localStorage.getItem(\"usedProofs\");\n      const usedProofs = storedProofs ? JSON.parse(storedProofs) : [];\n      window.localStorage.setItem(\n        \"usedProofs\",\n        JSON.stringify([...usedProofs, proof])\n      );\n    }\n\n    forceRefresh();\n  }\n\n  async _connectWallet() {\n    // This method is run when the user clicks the Connect. It connects the\n    // dapp to the user's wallet, and initializes it.\n\n    // To connect to the user's wallet, we have to run this method.\n    // It returns a promise that will resolve to the user's address.\n    const [selectedAddress] = await window.ethereum.enable();\n\n    // Once we have the address, we can initialize the application.\n\n    // First we check the network\n    if (!this._checkNetwork()) {\n      return;\n    }\n\n    this._initialize(selectedAddress);\n\n    // We reinitialize it whenever the user changes their account.\n    window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\n      this._stopPollingData();\n      // `accountsChanged` event can be triggered with an undefined newAddress.\n      // This happens when the user removes the Dapp from the \"Connected\n      // list of sites allowed access to your addresses\" (Metamask > Settings > Connections)\n      // To avoid errors, we reset the dapp state\n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n\n      this._initialize(newAddress);\n    });\n\n    // We reset the dapp state if the network is changed\n    window.ethereum.on(\"networkChanged\", ([networkId]) => {\n      this._stopPollingData();\n      this._resetState();\n    });\n  }\n\n  _initialize(userAddress) {\n    // This method initializes the dapp\n\n    // We first store the user's address in the component's state\n    this.setState({\n      selectedAddress: userAddress,\n    });\n\n    // Then, we initialize ethers + contract\n    this._intializeEthers();\n  }\n\n  async _intializeEthers() {\n    // We first initialize ethers by creating a provider using window.ethereum\n    this._provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    this._minter = new ethers.Contract(\n      contractAddress.AttestationMinter,\n      AttestationMinterArtifact.abi,\n      this._provider.getSigner(0)\n    );\n  }\n\n  // The next two methods are needed to start and stop polling data. While\n  // the data being polled here is specific to this example, you can use this\n  // pattern to read any data from your contracts.\n  //\n  // Note that if you don't need it to update in near real time, you probably\n  // don't need to poll it. If that's the case, you can just fetch it when you\n  // initialize the app, as we do with the token data.\n  _startPollingData() {\n    this._pollDataInterval = setInterval(() => this._updateBalance(), 1000);\n\n    // We run it once immediately so we don't have to wait for it\n    this._updateBalance();\n  }\n\n  _stopPollingData() {\n    clearInterval(this._pollDataInterval);\n    this._pollDataInterval = undefined;\n  }\n\n  // The next two methods just read from the contract and store the results\n  // in the component state.\n  // async _getTokenData() {\n  //   const name = await this._token.name()\n  //   const symbol = await this._token.symbol()\n\n  //   this.setState({ tokenData: { name, symbol } })\n  // }\n\n  async _updateBalance() {\n    const balance = await this._token.balanceOf(this.state.selectedAddress);\n    this.setState({ balance });\n  }\n\n  // This method sends an ethereum transaction to transfer tokens.\n  // While this action is specific to this application, it illustrates how to\n  // send a transaction.\n  async _transferTokens(to, amount) {\n    // Sending a transaction is a complex operation:\n    //   - The user can reject it\n    //   - It can fail before reaching the ethereum network (i.e. if the user\n    //     doesn't have ETH for paying for the tx's gas)\n    //   - It has to be mined, so it isn't immediately confirmed.\n    //     Note that some testing networks, like Hardhat Network, do mine\n    //     transactions immediately, but your dapp should be prepared for\n    //     other networks.\n    //   - It can fail once mined.\n    //\n    // This method handles all of those things, so keep reading to learn how to\n    // do it.\n\n    try {\n      // If a transaction fails, we save that error in the component's state.\n      // We only save one such error, so before sending a second transaction, we\n      // clear it.\n      this._dismissTransactionError();\n\n      // We send the transaction, and save its hash in the Dapp's state. This\n      // way we can indicate that we are waiting for it to be mined.\n      const tx = await this._token.transfer(to, amount);\n      this.setState({ txBeingSent: tx.hash });\n\n      // We use .wait() to wait for the transaction to be mined. This method\n      // returns the transaction's receipt.\n      const receipt = await tx.wait();\n\n      // The receipt, contains a status flag, which is 0 to indicate an error.\n      if (receipt.status === 0) {\n        // We can't know the exact error that made the transaction fail when it\n        // was mined, so we throw this generic one.\n        throw new Error(\"Transaction failed\");\n      }\n\n      // If we got here, the transaction was successful, so you may want to\n      // update your state. Here, we update the user's balance.\n      await this._updateBalance();\n    } catch (error) {\n      // We check the error code to see if this error was produced because the\n      // user rejected a tx. If that's the case, we do nothing.\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        return;\n      }\n\n      // Other errors are logged and stored in the Dapp's state. This is used to\n      // show them to the user, and for debugging.\n      console.error(error);\n      this.setState({ transactionError: error });\n    } finally {\n      // If we leave the try/catch, we aren't sending a tx anymore, so we clear\n      // this part of the state.\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  // This method just clears part of the state.\n  _dismissTransactionError() {\n    this.setState({ transactionError: undefined });\n  }\n\n  // This method just clears part of the state.\n  _dismissNetworkError() {\n    this.setState({ networkError: undefined });\n  }\n\n  // This is an utility method that turns an RPC error into a human readable\n  // message.\n  _getRpcErrorMessage(error) {\n    if (error.data) {\n      return error.data.message;\n    }\n\n    return error.message;\n  }\n\n  // This method resets the state\n  _resetState() {\n    this.setState(this.initialState);\n  }\n\n  // This method checks if Metamask selected network is Localhost:8545 or goerli\n  _checkNetwork() {\n    if (\n      window.ethereum.networkVersion === HARDHAT_NETWORK_ID ||\n      window.ethereum.networkVersion === GOERLI_NETWORK_ID\n    ) {\n      return true;\n    }\n\n    this.setState({\n      networkError: \"Please connect Metamask to Localhost:8545 or goerli\",\n    });\n\n    return false;\n  }\n}\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { ethers } from \"ethers\";\n\nimport AttestationMinterArtifact from \"../../contracts/AttestationMinter.json\";\nimport contractAddress from \"../../contracts/contract-address.json\";\n\nconst { ethereum } = window;\n\n// actions\nconst LOG_IN = \"LOG_IN\";\nconst GET_USER = \"GET_USER\";\nconst SELECT_USER = \"SELECT_USER\";\nconst NETWORK_ERROR = \"NETWORK_ERROR\";\nconst IS_LOADING = \"IS_LOADING\";\nconst PROVIDER = \"PROVIDER\";\nconst MINTER = \"MINTER\";\n\n// action creators\nconst login = createAction(LOG_IN, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst selectedAddress = createAction(SELECT_USER, (selectedAddress) => ({\n  selectedAddress,\n}));\nconst networkError = createAction(NETWORK_ERROR, (networkError) => ({\n  networkError,\n}));\nconst isLoading = createAction(IS_LOADING, (isLoading) => ({ isLoading }));\nconst provider = createAction(PROVIDER, (provider) => ({ provider }));\nconst minter = createAction(MINTER, (minter) => ({ minter }));\n\n//네트워크 설정\nconst HARDHAT_NETWORK_ID = \"31337\";\nconst GOERLI_NETWORK_ID = \"5\";\nconst ERROR_CODE_TX_REJECTED_BY_USER = 4001;\n\n// initialState\nconst initialState = {\n  tokenData: undefined,\n  selectedAddress: undefined,\n  balance: undefined,\n  txBeingSent: undefined,\n  transactionError: undefined,\n  networkError: undefined,\n  forceRefresh: 0,\n  isLoading: false,\n  provider: undefined,\n  minter: undefined,\n};\n\n// middleware actions\nconst _checkNetwork = () => {\n  if (\n    ethereum.networkVersion === HARDHAT_NETWORK_ID ||\n    ethereum.networkVersion === GOERLI_NETWORK_ID\n  ) {\n    console.log(\"true\");\n    return true;\n  }\n  console.log(\"false\");\n  return false;\n};\n\nconst _intializeEthers = () => {\n  const _provider = new ethers.providers.Web3Provider(window.ethereum);\n  const _minter = new ethers.Contract(\n    contractAddress.AttestationMinter,\n    AttestationMinterArtifact.abi,\n    _provider.getSigner(0)\n  );\n\n  return {\n    provider: _provider,\n    minter: _minter,\n  };\n};\n\nconst loginDB = () => {\n  return async function (dispatch, getState, { history }) {\n    if (_checkNetwork() === false) {\n      alert(\"Please connect Metamask to Localhost:8545 or goerli\");\n      return;\n    }\n\n    dispatch(isLoading(true));\n    const data = await ethereum.send(\"eth_requestAccounts\");\n    dispatch(selectedAddress(data.result[0]));\n    dispatch(isLoading(false));\n    _intializeEthers();\n\n    dispatch(provider(_intializeEthers().provider));\n    dispatch(minter(_intializeEthers().minter));\n  };\n};\n\nconst loginCheckDB = () => {\n  _intializeEthers();\n  return async function (dispatch, getState, { history }) {\n    const network = await ethereum.request({ method: \"net_version\" });\n\n    if (Number(network) === 5 || 31337) {\n      const accounts = await ethereum.request({\n        method: \"eth_accounts\",\n      });\n      console.log(accounts);\n      dispatch(selectedAddress(accounts[0]));\n    } else {\n      dispatch(provider(undefined));\n      dispatch(minter(undefined));\n      return;\n    }\n    _intializeEthers();\n\n    dispatch(provider(_intializeEthers().provider));\n    dispatch(minter(_intializeEthers().minter));\n  };\n};\n\n// reducer\nexport default handleActions(\n  {\n    [LOG_IN]: (state, action) =>\n      produce(state, (draft) => {\n        localStorage.setItem(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n      }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n    [SELECT_USER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.selectedAddress = action.payload.selectedAddress;\n      }),\n    [NETWORK_ERROR]: (state, action) => produce(state, (draft) => {}),\n    [IS_LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isLoading = action.payload.isLoading;\n      }),\n    [PROVIDER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.provider = action.payload.provider;\n      }),\n    [MINTER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.minter = action.payload.minter;\n      }),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = { loginDB, loginCheckDB, selectedAddress };\n\nexport { actionCreators };\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { getInput } from \"../../helpers/GetInput\";\nimport calculateProof from \"../../helpers/ProofHelper\";\nimport buildContractCallArgs from \"../../helpers/ProofHelper2\";\nimport { useSelector } from \"react-redux\";\n\nconst { ethereum } = window;\n\n// actions\nconst GET_PROOF = \"GET_PROOF\";\nconst IS_LOADING = \"IS_LOADING\";\nconst TX_HASH = \"TX_HASH\";\n\n// action creators\nconst getProof = createAction(GET_PROOF, (getProof) => ({ getProof }));\nconst isLoading = createAction(IS_LOADING, (isLoading) => ({ isLoading }));\nconst txHash = createAction(TX_HASH, (txHash) => ({ txHash }));\n\n// initialState\nconst initialState = {\n  getProof: undefined,\n  isLoading: false,\n  txHash: undefined,\n};\n\n// middleware actions\n\nconst _handleProve = (_provider) => {\n  return async function (dispatch, getState, { history }) {\n    dispatch(isLoading(true));\n\n    const input = await getInput(_provider.getSigner(0));\n\n    const proof = await calculateProof(input);\n    console.log(proof);\n\n    const merkleRoot = 1234;\n    const nullifier = 10;\n    const contractArgs = buildContractCallArgs(proof, merkleRoot, nullifier);\n    console.log(contractArgs);\n\n    // save proof to localStorage\n    const storedProofs = window.localStorage.getItem(\"proofs\");\n    const currentProofs = storedProofs ? JSON.parse(storedProofs) : [];\n    window.localStorage.setItem(\n      \"proofs\",\n      JSON.stringify([...currentProofs, contractArgs])\n    );\n    dispatch(isLoading(false));\n    alert(\"A proof has created!\");\n    history.push(\"/3\");\n  };\n};\n\nconst _handleVerify = (account, proof, minter) => {\n  return async function (dispatch, getState, { history }) {\n    dispatch(isLoading(true));\n    await minter\n      .mint(proof[0], proof[1], proof[2], proof[3], proof[4])\n      .then((response) => {\n        console.log(response.hash);\n        dispatch(txHash(response.hash));\n        dispatch(isLoading(false));\n        history.push(\"/6\");\n      })\n      .catch((error) => {\n        console.error(error.message);\n        dispatch(isLoading(false));\n        history.push(\"/fail\");\n      });\n  };\n};\n\n// reducer\nexport default handleActions(\n  {\n    [GET_PROOF]: (state, action) =>\n      produce(state, (draft) => {\n        draft.getProof = action.payload.getProof;\n      }),\n    [IS_LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isLoading = action.payload.isLoading;\n      }),\n    [TX_HASH]: (state, action) =>\n      produce(state, (draft) => {\n        draft.txHash = action.payload.txHash;\n      }),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = { _handleProve, getProof, _handleVerify };\n\nexport { actionCreators };\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport user from \"./modules/user\";\nimport nft from \"./modules/nft\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  user: user,\n  nft: nft,\n  router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Colors = {\n  surface: \"#141414\",\n  primary: \"#6BAAFF\",\n  second: \"#FFFFFF\",\n  alert: \"#FF6B73\",\n  text: \"#FFFFFF\",\n  approve: \"#00FF94\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\n\nconst Button = (props) => {\n  const { onClick, children, small, margin, flexGrow } = props;\n\n  const styles = {\n    margin: margin,\n    flexGrow: flexGrow,\n  };\n\n  if (small) {\n    return (\n      <ButtonSmall onClick={onClick} {...styles}>\n        {children}\n      </ButtonSmall>\n    );\n  }\n\n  return (\n    <ButtonLarge onClick={onClick} {...styles}>\n      {children}\n    </ButtonLarge>\n  );\n};\n\nexport default Button;\n\nButton.defaultProps = {\n  margin: 0,\n  flexGrow: 0,\n};\n\nconst ButtonLarge = styled.button`\n  height: fit-content;\n  width: fit-content;\n  padding: 12px;\n  margin: ${(props) => props.margin};\n  background-color: transparent;\n  color: ${Colors.primary};\n  border: 1px solid transparent;\n  border-radius: 6px;\n  font-weight: 700;\n  flex-grow: ${(props) => props.flexGrow};\n\n  :hover {\n    border: 1px solid ${Colors.primary};\n    cursor: pointer;\n  }\n  :focus {\n    border: 1px solid ${Colors.primary};\n    box-shadow: 0px 0px 6px ${Colors.primary};\n    cursor: pointer;\n  }\n`;\n\nconst ButtonSmall = styled.button`\n  height: fit-content;\n  width: fit-content;\n  padding: 4px;\n  background-color: transparent;\n  color: ${Colors.second};\n  border: 1px solid transparent;\n  border-radius: 2px;\n  font-weight: 400;\n\n  :hover {\n    border: 1px solid ${Colors.second};\n    cursor: pointer;\n  }\n  :focus {\n    border: 1px solid ${Colors.second};\n    box-shadow: 0px 0px 8px rgba(255, 255, 255, 0.5);\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\n\nconst Input = (props) => {\n  const { onChange, value, placeholder, id, label, alert, alertMessage, _ref } =\n    props;\n\n  const styles = { _ref };\n\n  if (alert) {\n    return (\n      <>\n        <InputLabel id={id}>{label}</InputLabel>\n        <InputContainerAlert\n          id={id}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n          ref={_ref}\n        ></InputContainerAlert>\n        <InputAlert>{alertMessage}</InputAlert>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <InputLabel id={id}>{label}</InputLabel>\n      <InputContainer\n        id={id}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        ref={_ref}\n      ></InputContainer>\n    </>\n  );\n};\n\nexport default Input;\n\nInput.defaultProps = {\n  alert: false,\n};\n\nconst InputContainer = styled.input`\n  height: fit-content;\n  width: 100%;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${Colors.text};\n  border: 1px solid transparent;\n  border-radius: 2px;\n\n  :focus {\n    border: 1px solid ${Colors.primary};\n    box-shadow: 0px 0px 6px ${Colors.primary};\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n\n  ::placeholder {\n    color: ${Colors.text};\n    opacity: 0.3;\n  }\n`;\n\nconst InputContainerAlert = styled.input`\n  height: fit-content;\n  width: 100%;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${Colors.text};\n  border: 1px solid ${Colors.alert};\n  border-radius: 2px;\n\n  :focus {\n    box-shadow: 0px 0px 6px ${Colors.alert};\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n\n  ::placeholder {\n    color: ${Colors.text};\n    opacity: 0.3;\n  }\n`;\n\nconst InputLabel = styled.label`\n  color: ${Colors.text};\n`;\n\nconst InputAlert = styled.p`\n  color: ${Colors.alert};\n  padding-top: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Copybox = (props) => {\n  const { _onClick, children, small } = props;\n\n  const styles = {};\n\n  return <ButtonContainer>header</ButtonContainer>;\n};\n\nexport default Copybox;\n\nconst ButtonContainer = styled.button`\n  height: 32px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nfunction Loading() {\n  React.useEffect(() => {\n    console.log(\"hi\");\n  }, []);\n  return (\n    <LoadingStyle>\n      <svg\n        width=\"19\"\n        height=\"19\"\n        viewBox=\"0 0 19 19\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M18 9.5C18 14.1944 14.1944 18 9.5 18C4.80558 18 1 14.1944 1 9.5C1 4.80558 4.80558 1 9.5 1\"\n          stroke=\"#6BAAFF\"\n        />\n      </svg>\n    </LoadingStyle>\n  );\n}\n\nexport default Loading;\n\nconst move = keyframes`\n\t//단계 별로 변화를 주는 코드\n\t0%{\n    transform: rotate(0deg);\n    }\n    \n    25%{\n    \ttransform: rotate(90deg);\n    }\n    \n    50%{\n    \ttransform: rotate(180deg);\n    }\n    \n    75%{\n    \ttransform: rotate(270deg);\n    }\n    \n    100%{\n    \ttransform: rotate(360deg);\n    }\n`;\n\nconst LoadingStyle = styled.div`\n  width: fit-content;\n  height: fit-content;\n  animation: ${move} 1s infinite;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"./index\";\nimport { Colors } from \"./Colors\";\n\nconst RadioButton = (props) => {\n  const { id, label, caption, name, children, margin, checked, disabled } =\n    props;\n\n  const styles = { margin, checked };\n\n  return (\n    <RadioButtonWrap {...styles}>\n      <RadioButtonContainer\n        {...styles}\n        id={id}\n        name={name}\n        disabled={disabled}\n        type=\"radio\"\n      />\n      <RidioButtonLabel\n        {...styles}\n        checked={checked}\n        margin=\"0 0 0 8px\"\n        htmlFor={id}\n        name={name}\n      >\n        {label}\n      </RidioButtonLabel>\n      <RidioButtonCaption\n        {...styles}\n        checked={checked}\n        margin=\"4px 20px\"\n        htmlFor={id}\n        name={name}\n      >\n        {children}\n      </RidioButtonCaption>\n    </RadioButtonWrap>\n  );\n};\n\nexport default RadioButton;\n\nconst RadioButtonWrap = styled.div`\n  width: 100%;\n  height: fit-content;\n  margin: ${(props) => props.margin};\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst RidioButtonLabel = styled.label`\n  margin: ${(props) => props.margin};\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst RidioButtonCaption = styled.label`\n  display: inline-block;\n  margin: ${(props) => props.margin};\n  opacity: 0.5;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst RadioButtonContainer = styled.input`\n  :hover {\n    cursor: pointer;\n  }\n  :checked {\n  }\n  &:checked + ${RidioButtonLabel} {\n    color: ${Colors.approve};\n  }\n`;\n","import React, { Children } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\n\nconst Text = (props) => {\n  const { bold, children, margin, flexGrow, opacity, alert } = props;\n\n  const styles = {\n    margin: margin,\n    flexGrow: flexGrow,\n    bold: bold,\n    opacity: opacity,\n    alert,\n  };\n\n  return <TextContainer {...styles}>{children}</TextContainer>;\n};\n\nText.defaultProps = {\n  margin: 0,\n  flexGrow: 0,\n  bold: null,\n  opacity: 1,\n};\n\nexport default Text;\n\nconst TextContainer = styled.p`\n  ${(props) => (props.bold ? `font-weight: 700` : null)};\n  margin: ${(props) => props.margin};\n  opacity: ${(props) => props.opacity};\n  color: ${(props) => (props.alert ? `${Colors.alert}` : `${Colors.text}`)};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\n\nconst Link = (props) => {\n  const { children, onClick } = props;\n\n  const styles = {};\n\n  return (\n    <LinkContainer {...styles} onClick={onClick}>\n      {children}\n    </LinkContainer>\n  );\n};\n\nexport default Link;\n\nconst LinkContainer = styled.button`\n  color: ${Colors.second};\n  text-decoration-line: underline;\n  background: none;\n  border: none;\n  margin: 0;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"./Colors\";\n\nconst Textarea = (props) => {\n  const {\n    onChange,\n    value,\n    placeholder,\n    id,\n    label,\n    alert,\n    alertMessage,\n    height,\n    _ref,\n  } = props;\n\n  const styles = {\n    height: height,\n    _ref,\n  };\n\n  if (alert) {\n    return (\n      <>\n        <TextareaLabel id={id}>{label}</TextareaLabel>\n        <TextareaContainerAlert\n          {...styles}\n          id={id}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n          ref={_ref}\n        ></TextareaContainerAlert>\n        <TextareaAlert>{alertMessage}</TextareaAlert>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <TextareaLabel id={id}>{label}</TextareaLabel>\n      <TextareaContainer\n        {...styles}\n        id={id}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        ref={_ref}\n      ></TextareaContainer>\n    </>\n  );\n};\n\nexport default Textarea;\n\nTextarea.defaultProps = {\n  alert: false,\n  height: \"100px\",\n};\n\nconst TextareaContainer = styled.textarea`\n  height: ${(props) => props.height};\n  width: 100%;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${Colors.text};\n  border: 1px solid transparent;\n  border-radius: 2px;\n  resize: none;\n\n  :focus {\n    border: 1px solid ${Colors.primary};\n    box-shadow: 0px 0px 6px ${Colors.primary};\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n\n  ::placeholder {\n    color: ${Colors.text};\n    opacity: 0.3;\n  }\n`;\n\nconst TextareaContainerAlert = styled.textarea`\n  height: ${(props) => props.height};\n  width: 100%;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.05);\n  color: ${Colors.text};\n  border: 1px solid ${Colors.alert};\n  border-radius: 2px;\n\n  :focus {\n    box-shadow: 0px 0px 6px ${Colors.alert};\n  }\n\n  :focus-visible {\n    outline: none;\n  }\n\n  ::placeholder {\n    color: ${Colors.text};\n    opacity: 0.3;\n  }\n`;\n\nconst TextareaLabel = styled.label`\n  color: ${Colors.text};\n`;\n\nconst TextareaAlert = styled.p`\n  color: ${Colors.alert};\n  padding-top: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Spacing = (props) => {\n  const { size } = props;\n\n  const styles = {\n    size: size,\n  };\n\n  return <SpacingContainer {...styles} />;\n};\n\nSpacing.defaultProps = {\n  height: \"inherit\",\n  width: \"inherit\",\n};\n\nexport default Spacing;\n\nconst SpacingContainer = styled.div`\n  height: ${(props) => props.size};\n  width: ${(props) => props.size};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Link, Text } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst { ethereum } = window;\n\nconst Header = (props) => {\n  const { connected, address } = props;\n\n  const selectedAddress = useSelector((state) => state.user.selectedAddress);\n\n  const styles = {};\n\n  return (\n    <HeaderContainer {...styles}>\n      {connected ? (\n        <Flex>\n          <Text margin=\"0 8px 0 0\">{selectedAddress}</Text>\n        </Flex>\n      ) : (\n        <></>\n      )}\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  height: fit-content;\n  padding: 8px;\n  width: 100%;\n`;\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n`;\n","import React, { Children } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../elements/Colors\";\nimport { ButtonWrap } from \"./index\";\nimport { Button, Text, Spacing } from \"../elements\";\n\nconst Card = (props) => {\n  const {\n    title,\n    contents,\n    btnRight,\n    btnLeft,\n    oneButton,\n    onClickLeft,\n    onClickRight,\n    children,\n  } = props;\n\n  const styles = {};\n\n  return <CardContainer {...styles}>{children}</CardContainer>;\n};\n\nexport default Card;\n\nconst CardContainer = styled.div`\n  position: absolute;\n  top: calc(50% - 300px);\n  left: calc(50% - 180px);\n  height: fit-content;\n  width: 360px;\n  padding: 36px;\n  background-color: ${Colors.surface};\n  border: 0.8px solid rgba(255, 255, 255, 0.2);\n  border-radius: 6px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../elements/Colors\";\nimport { Button, Text, Spacing } from \"../elements\";\n\nconst ButtonWrap = (props) => {\n  const {\n    btnRight,\n    btnLeft,\n    oneButton,\n    onClickRight,\n    onClickLeft,\n  } = props;\n\n  const styles = {\n  };\n\n  if (oneButton) {\n    return (\n      <ButtonContainer>\n        <FlexContiner></FlexContiner>\n        <ButtonContainerRight>\n          <Button onClick={onClickRight} margin=\"0 -12px -12px\">{btnRight}</Button>\n        </ButtonContainerRight>\n      </ButtonContainer>\n    )\n  }\n\n  return (\n      <ButtonContainer>\n        <ButtonContainerLeft>\n          <Button onClick={onClickLeft} margin=\"0 0 -12px -12px\">{btnLeft}</Button>\n        </ButtonContainerLeft>\n        <ButtonContainerRight>\n          <Button onClick={onClickRight} margin=\"0 -12px -12px\">{btnRight}</Button>\n        </ButtonContainerRight>\n      </ButtonContainer>\n  );\n}\n\nexport default ButtonWrap;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n`\n\nconst ButtonContainerLeft = styled.div`\n  display: flex;\n  order: 0;\n  flex-grow: 1;\n`\n\nconst ButtonContainerRight = styled.div`\n  display: flex;\n  order: 1;\n  flex-grow: 0;\n`\n\nconst FlexContiner = styled.div`\n  display: flex;\n  order: 0;\n  flex-grow: 1;\n  width: 10px;\n`","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport { history } from \"../redux/configureStore\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n} from \"../elements/index\";\nimport { WaitingCreatingProof } from \"./index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as nftActions } from \"../redux/modules/nft\";\n\nfunction AfterConnect(props) {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.nft.isLoading);\n\n  const _provider = useSelector((state) => state.user.provider);\n  function onClickRight() {\n    dispatch(nftActions._handleProve(_provider));\n  }\n\n  return (\n    <>\n      {!isLoading ? (\n        <Card>\n          <Text bold>Congrlatulate!</Text>\n          <Spacing size=\"20px\" />\n          <Text>You are a winner of this stage!</Text>\n          <Text>Claim your NFT.</Text>\n          <Spacing size=\"20px\" />\n          <RadioButton name=\"claimType\" id=\"1\" label=\"Claim\" disabled={true}>\n            Receive reward with your original address\n          </RadioButton>\n          <Spacing size=\"20px\" />\n          <RadioButton name=\"claimType\" id=\"2\" label=\"Secret Claim\">\n            Receive reward with your second address <br /> to hide your score\n            from other players\n          </RadioButton>\n          <Spacing size=\"20px\" />\n          <ButtonWrap\n            oneButton\n            onClickRight={onClickRight}\n            btnRight=\"Create Proof\"\n          />\n        </Card>\n      ) : (\n        <WaitingCreatingProof />\n      )}\n    </>\n  );\n}\n\nexport default AfterConnect;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n  Link,\n  Loading,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\n\nfunction CheckingReward(props) {\n  function onClickRight() {}\n  function onClickLeft() {}\n\n  // React.useEffect(() => {\n  //   setTimeout(function () {\n  //     history.push(\"/2\");\n  //   }, 3000);\n  // }, []);\n\n  return (\n    <>\n      <>\n        <Card>\n          <Loading />\n          <Spacing size=\"10px\" />\n          <Text bold>Waiting...</Text>\n          <Spacing size=\"20px\" />\n          <Text>We're checking your score.</Text>\n        </Card>\n      </>\n    </>\n  );\n}\n\nexport default CheckingReward;\n","import React from \"react\";\n\nfunction CheckIcon() {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.74998 12.1275L4.14748 9.525C3.85498 9.2325 3.38248 9.2325 3.08998 9.525C2.79748 9.8175 2.79748 10.29 3.08998 10.5825L6.22498 13.7175C6.51748 14.01 6.98998 14.01 7.28248 13.7175L15.2175 5.7825C15.51 5.49 15.51 5.0175 15.2175 4.725C14.925 4.4325 14.4525 4.4325 14.16 4.725L6.74998 12.1275Z\"\n        fill=\"#6FCF97\"\n      />\n    </svg>\n  );\n}\n\nexport default CheckIcon;\n","import React from \"react\";\n\nfunction FailedIcon() {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.725 4.2825C13.4325 3.99 12.96 3.99 12.6675 4.2825L9.00004 7.9425L5.33254 4.275C5.04004 3.9825 4.56754 3.9825 4.27504 4.275C3.98254 4.5675 3.98254 5.04 4.27504 5.3325L7.94254 9L4.27504 12.6675C3.98254 12.96 3.98254 13.4325 4.27504 13.725C4.56754 14.0175 5.04004 14.0175 5.33254 13.725L9.00004 10.0575L12.6675 13.725C12.96 14.0175 13.4325 14.0175 13.725 13.725C14.0175 13.4325 14.0175 12.96 13.725 12.6675L10.0575 9L13.725 5.3325C14.01 5.0475 14.01 4.5675 13.725 4.2825V4.2825Z\"\n        fill=\"#EB5757\"\n      />\n    </svg>\n  );\n}\n\nexport default FailedIcon;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n  Link,\n} from \"../elements\";\nimport { CheckIcon, LinkIcon } from \"../imgs/index\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Colors } from \"../elements/Colors\";\nimport \"./link.css\";\n\nfunction Finish() {\n  const txHash = useSelector((state) => state.nft.txHash);\n\n  function onClickRight() {\n    history.push(\"/\");\n  }\n  function onClickLeft() {}\n\n  React.useEffect(() => {\n    console.log(txHash);\n  }, []);\n\n  return (\n    <Card>\n      <Text bold>\n        <CheckIcon />\n        Transaction has sent.\n      </Text>\n      <Spacing size=\"20px\" />\n      <Text>\n        We’ve sucessfuly sent transaction to mint NFT. <br /> Check your\n        transaction.\n      </Text>\n      <Spacing size=\"20px\" />\n\n      <Link\n        className=\"link\"\n        onClick={() =>\n          window.open(`https://goerli.etherscan.io/tx/${txHash}`, \"_blank\")\n        }\n      >\n        Check Transaction\n      </Link>\n\n      <Spacing size=\"20px\" />\n      <ButtonWrap oneBtn onClickRight={onClickRight} btnRight=\"Go Home\" />\n    </Card>\n  );\n}\n\nexport default Finish;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\nimport { CheckingReward, AfterConnect } from \"./index\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Home() {\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null,\n  });\n\n  const isLoading = useSelector((state) => state.user.isLoading);\n  const dispatch = useDispatch();\n\n  const RightClick = () => {\n    dispatch(userActions.loginDB());\n  };\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <CheckingReward isLoading={isLoading} />\n        </>\n      ) : (\n        <Card>\n          <Text bold>Claim Reward</Text>\n          <Spacing size=\"20px\" />\n          <Text>If you want to claim your NFT,</Text>\n          <Text>Please connect your wallet.</Text>\n          <Spacing size=\"20px\" />\n          <ButtonWrap\n            oneButton\n            onClickRight={RightClick}\n            btnRight=\"Connect Wallet\"\n          />\n        </Card>\n      )}\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as nftActions } from \"../redux/modules/nft\";\n\nfunction PrivateNote() {\n  const dispatch = useDispatch();\n  const is_loading = useSelector((state) => state.user.selectedAddress);\n\n  const proofs = JSON.parse(window.localStorage.getItem(\"proofs\"));\n  const proof = JSON.stringify(proofs[proofs.length - 1]);\n  React.useEffect(() => {\n    console.log(JSON.stringify(proofs[proofs.length - 1]));\n  }, []);\n\n  function onClickRight() {\n    history.push(\"/4\");\n  }\n\n  function onClickLeft() {\n    history.goBack();\n  }\n\n  return (\n    <Card>\n      <Text bold>Save your private note</Text>\n      <Spacing size=\"20px\" />\n      <Text>\n        Please back up your note. You will need it later to withdraw your\n        deposit.\n      </Text>\n      <Spacing size=\"20px\" />\n      <Text alert>\n        Treat your note as a private key - never share it with anyone, including\n        darkforest developers.\n      </Text>\n      <Spacing size=\"20px\" />\n      <Textarea value={proof} height=\"20rem\" />\n      <Spacing size=\"20px\" />\n      <ButtonWrap\n        onClickLeft={onClickLeft}\n        onClickRight={onClickRight}\n        btnLeft=\"Back\"\n        btnRight=\"Next\"\n      />\n    </Card>\n  );\n}\n\nexport default PrivateNote;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as nftActions } from \"../redux/modules/nft\";\nimport Web3 from \"web3\";\nimport { WaitngClaim } from \"./index\";\n\nfunction SecretClaim() {\n  const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8546\");\n\n  const isLoading = useSelector((state) => state.nft.isLoading);\n\n  const dispatch = useDispatch();\n  const proofs = JSON.parse(window.localStorage.getItem(\"proofs\"));\n  const address = useSelector((state) => state.user.selectedAddress);\n  const minter = useSelector((state) => state.user.minter);\n\n  const privateNoteInputValue = React.useRef();\n  const addressInputValue = React.useRef();\n\n  const checkAddress = () => {\n    try {\n      web3.utils.toChecksumAddress(addressInputValue.current.value);\n      return true;\n    } catch (error) {\n      console.log(error);\n      console.error(\"invalid ethereum address\", error.message);\n      return false;\n    }\n  };\n\n  const checkInput = () => {\n    console.log(privateNoteInputValue.current.value);\n    if (\n      privateNoteInputValue.current.value === \"\" ||\n      privateNoteInputValue.current.value === null ||\n      privateNoteInputValue.current.value === undefined ||\n      addressInputValue.current.value === \"\" ||\n      addressInputValue.current.value === null ||\n      addressInputValue.current.value === undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  function onClickRight() {\n    console.log(checkInput());\n    if (checkInput() === false) {\n      console.log(\"Fill the blank\");\n      alert(\"Fill the blank!\");\n      return;\n    }\n    if (checkAddress() === false) {\n      alert(\"Recheck the field\");\n      return;\n    }\n    console.log(proofs.length);\n    dispatch(\n      nftActions._handleVerify(\n        addressInputValue.current.value,\n        JSON.parse(privateNoteInputValue.current.value),\n        minter\n      )\n    );\n  }\n  function onClickLeft() {\n    history.goBack();\n  }\n\n  return (\n    <>\n      {!isLoading ? (\n        <Card>\n          <Text bold>Secret Claim</Text>\n          <Spacing size=\"20px\" />\n          <Text>Enter private note and recipient wallet.</Text>\n          <Text>Reward will be trasfered to the recipient wallet.</Text>\n          <Spacing size=\"20px\" />\n          <Textarea\n            placeholder=\"Enter a private note...\"\n            _ref={privateNoteInputValue}\n            height=\"20rem\"\n          />\n          <Spacing size=\"20px\" />\n          <Input\n            placeholder=\"Type an ethereum recipient address...\"\n            _ref={addressInputValue}\n          />\n          <Spacing size=\"20px\" />\n          <ButtonWrap\n            onClickLeft={onClickLeft}\n            onClickRight={onClickRight}\n            btnLeft=\"Back\"\n            btnRight=\"Mint NFT\"\n          />\n        </Card>\n      ) : (\n        <WaitngClaim />\n      )}\n    </>\n  );\n}\n\nexport default SecretClaim;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n  Link,\n  Loading,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\n\nfunction WaitngClaim() {\n  function onClickRight() {}\n  function onClickLeft() {\n    history.goBack();\n  }\n\n  return (\n    <Card>\n      <Loading />\n      <Spacing size=\"10px\" />\n      <Text bold>Waiting...</Text>\n      <Spacing size=\"20px\" />\n      <Text>We're minting your NFT.</Text>\n    </Card>\n  );\n}\n\nexport default WaitngClaim;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n  Link,\n  Loading,\n} from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\n\nfunction WaitngCreatingProof() {\n  function onClickRight() {}\n  function onClickLeft() {\n    history.goBack();\n  }\n\n  return (\n    <Card>\n      <Loading />\n      <Spacing size=\"10px\" />\n      <Text bold>Waiting...</Text>\n      <Spacing size=\"20px\" />\n      <Text>We're Creating a proof.</Text>\n    </Card>\n  );\n}\n\nexport default WaitngCreatingProof;\n","import React, { useState, useEffect, Children } from \"react\";\nimport { Header, Card, ButtonWrap } from \"../comps/index\";\nimport {\n  Input,\n  Textarea,\n  RadioButton,\n  Button,\n  Text,\n  Spacing,\n  Link,\n} from \"../elements\";\nimport { CheckIcon, LinkIcon, FailedIcon } from \"../imgs/index\";\nimport { history } from \"../redux/configureStore\";\n\nfunction FinishFail() {\n  function onClickRight() {\n    history.push(\"/\");\n  }\n  function onClickLeft() {}\n\n  return (\n    <Card>\n      <Text bold>\n        <FailedIcon />\n        Transaction is failed.\n      </Text>\n      <Spacing size=\"20px\" />\n      <Text>Please Retry.</Text>\n      <Spacing size=\"20px\" />\n      <ButtonWrap oneBtn onClickRight={onClickRight} btnRight=\"Go Home\" />\n    </Card>\n  );\n}\n\nexport default FinishFail;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport {\n  AfterConnect,\n  CheckingReward,\n  Finish,\n  Home,\n  PrivateNote,\n  SecretClaim,\n  WaitngClaim,\n  FinishFail,\n} from \"../pages\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { actionCreators as nftActions } from \"../redux/modules/nft\";\n\nimport { ethers } from \"ethers\";\n\nimport { Header, Card } from \"../comps\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction App() {\n  const { ethereum } = window;\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector((state) => state.user.selectedAddress);\n\n  React.useEffect(() => {\n    dispatch(userActions.loginCheckDB());\n    console.log(\"etheron\");\n    ethereum.on(\"accountsChanged\", (newAddress) => {\n      console.log(\"hi\");\n      if (newAddress === undefined) {\n        return dispatch(userActions.selectedAddress(undefined));\n      }\n\n      dispatch(userActions.selectedAddress(newAddress));\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ConnectedRouter history={history}>\n        {!isLoggedIn ? (\n          <>\n            <Header />\n          </>\n        ) : (\n          <>\n            <Header connected />\n          </>\n        )}\n        {!isLoggedIn ? (\n          <>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/1\" exact component={Home} />\n            <Route path=\"/2\" exact component={Home} />\n            <Route path=\"/3\" exact component={Home} />\n            <Route path=\"/4\" exact component={Home} />\n            <Route path=\"/5\" exact component={Home} />\n            <Route path=\"/6\" exact component={Home} />\n            <Route path=\"/fail\" exact component={Home} />\n          </>\n        ) : (\n          <>\n            <Route path=\"/\" exact component={AfterConnect} />\n            <Route path=\"/1\" exact component={CheckingReward} />\n            <Route path=\"/2\" exact component={AfterConnect} />\n            <Route path=\"/3\" exact component={PrivateNote} />\n            <Route path=\"/4\" exact component={SecretClaim} />\n            <Route path=\"/5\" exact component={WaitngClaim} />\n            <Route path=\"/6\" exact component={Finish} />\n            <Route path=\"/fail\" exact component={FinishFail} />\n          </>\n        )}\n      </ConnectedRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Dapp } from \"./components/Dapp\";\nimport \"./index.css\";\nimport App from \"./shared/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\n// We import bootstrap here, but you can remove if you want\n// import \"bootstrap/dist/css/bootstrap.css\";\n\n// This is the entry point of your application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    {/* <Dapp /> */}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}